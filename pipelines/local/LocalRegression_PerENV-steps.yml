parameters:
  extRepoUrl : ""
  extRepoDir : ""
  TestSuiteName : ""
  EnvironmentName : ""
  BuildShareFolder : ""
  RootSharePath : ""
  HelperBranch : "master"

jobs:
 - job: Test
    pool: TestSuiteHostPool

  steps:
    - script: echo "TestSuiteName ${{parameters.TestSuiteName}}"
              echo "EnvironmentName ${{parameters.EnvironmentName}}"
              echo "RootSharePath ${{parameters.RootSharePath}}"   
              echo "BuildShareFolder ${{parameters.BuildShareFolder}}"    
              echo "HelperBranch ${{parameters.HelperBranch}}"
      displayName: 'Show parameters'

    - script: 'git clone -c http.extraheader="AUTHORIZATION: bearer $(System.AccessToken)" -b %HelperBranch% %EXTREPO_URL% %EXTREPO_DIR% 2>&1'
      displayName: 'Fetch external repo'
      env:
        EXTREPO_URL: ${{parameters.extRepoUrl}}
        EXTREPO_DIR: ${{parameters.extRepoDir}}
        HelperBranch: ${{parameters.HelperBranch}}
      timeoutInMinutes: 0

    - task: PowerShell@2
      displayName: Sync-BuildFromShare
      inputs:
        filePath: '${{parameters.extRepoDir}}/AzureScripts/Download-TestsuiteFromShare.ps1'
        arguments: '-BuildShareFolder $env:BuildShareFolder -RootSharePath $env:RootSharePath -TestSuiteName $env:TestSuiteName -regressionType Local'
      env:
        BuildShareFolder: ${{parameters.BuildShareFolder}}
        TestSuiteName: ${{parameters.TestSuiteName}}
        RootSharePath: ${{parameters.RootSharePath}}
      timeoutInMinutes: 0

    - task: PowerShell@2
      displayName: Clean Up
      inputs:
        filePath: '$(Agent.HomeDirectory)/../WinteropProtocolTesting/VSTORMLITE/Cleanup-TestSuiteEnvironment.ps1'
        arguments: '-TestSuiteName $env:TestSuiteName -EnvironmentName $env:EnvironmentName'
      env:
        TestSuiteName: ${{parameters.TestSuiteName}}
        EnvironmentName: ${{parameters.EnvironmentName}}
      timeoutInMinutes: 0

    - task: PowerShell@2
      displayName: Setup Environment
      inputs:
        filePath: '$(Agent.HomeDirectory)/../WinteropProtocolTesting/VSTORMLITE/Setup-TestSuiteEnvironment.ps1'
        arguments: '-TestSuiteName $env:TestSuiteName -EnvironmentName $env:EnvironmentName'
      env:
        TestSuiteName: ${{parameters.TestSuiteName}}
        EnvironmentName: ${{parameters.EnvironmentName}}
      timeoutInMinutes: 0

    - task: PowerShell@2
      displayName: TestSuiteCases
      inputs:
        filePath: '$(Agent.HomeDirectory)/../WinteropProtocolTesting/VSTORMLITE/Execute-TestSuiteCases.ps1'
        arguments: '-TestSuiteName $env:TestSuiteName -EnvironmentName $env:EnvironmentName'
        errorActionPreference: continue
      env:
        TestSuiteName: ${{parameters.TestSuiteName}}
        EnvironmentName: ${{parameters.EnvironmentName}}
      timeoutInMinutes: 0

    - task: CopyFiles@2
      displayName: 'Copy Test Results to: $(Common.TestResultsDirectory)'
      inputs:
        SourceFolder: '$(Agent.HomeDirectory)/../WinteropProtocolTesting/TestResults/${{parameters.TestSuiteName}}'
        TargetFolder: '$(Common.TestResultsDirectory)'

    - task: PublishTestResults@2
      displayName: 'Publish trx files'
      inputs:
        testResultsFormat: VSTest
        testResultsFiles: '$(Common.TestResultsDirectory)/*.trx'
        buildConfiguration: ${{parameters.EnvironmentName}}
      timeoutInMinutes: 0
      condition: always()

