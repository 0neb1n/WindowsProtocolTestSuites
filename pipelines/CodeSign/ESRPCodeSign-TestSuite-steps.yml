parameters:
  extRepoUrl : ''
  extRepoDir : ''
  HelperBranch : 'master'

steps:
  - task: CopyFiles@2
    displayName: 'Copy TestSuite'
    inputs:
      SourceFolder: '$(Build.Repository.LocalPath)'
      TargetFolder: '$(Build.BinariesDirectory)'
      CleanTargetFolder: true

  - script: 'git clone -c http.extraheader="AUTHORIZATION: bearer $(System.AccessToken)" -b %HelperBranch% %EXTREPO_URL% %EXTREPO_DIR% 2>&1'
    displayName: 'Fetch external repo'
    env:
      EXTREPO_URL: ${{parameters.extRepoUrl}}
      EXTREPO_DIR: ${{parameters.extRepoDir}}
      HelperBranch: ${{parameters.HelperBranch}}
    timeoutInMinutes: 0

  - task: CopyFiles@2
    displayName: 'Copy CodeSign files'
    inputs:
      SourceFolder: '${{parameters.extRepoDir}}/CodeSign'
      TargetFolder: '$(Build.BinariesDirectory)/CodeSign'

  - task: CopyFiles@2
    displayName: 'Copy RDMA'
    inputs:
      SourceFolder: '${{parameters.extRepoDir}}/ProtoSDK/RDMA'
      TargetFolder: '$(Build.BinariesDirectory)/ProtoSDK/RDMA'

  - task: PowerShell@2
    displayName: 'Run code sign script'
    inputs:
      targetType: filePath
      filePath: '$(Build.BinariesDirectory)/CodeSign/Execute-SignTestSuites.ps1'
      arguments: '-TestSuiteName $(test.testSuiteName)'
      workingDirectory: '$(Build.BinariesDirectory)/CodeSign'

  - task: PowerShell@2
    displayName: 'Verify CodeSign '
    inputs:
      targetType: 'inline'
      script: |
        New-Item -Path "$(Build.BinariesDirectory)/Results" -ItemType Directory -Force
        Get-ChildItem -Path $(TargetFolder) -Filter "*.msi" | Foreach-Object { $(Build.BinariesDirectory)/CodeSign/Test/CodeSignVerify.ps1 -MsiPath $_.FullName -ReportPath "$(Build.BinariesDirectory)/Results/$($_.Name).html" }

  - task: CopyFiles@2
    displayName: 'Copy Verify Results' 
    inputs:
      SourceFolder: '$(Build.BinariesDirectory)/Results'
      Contents: '*.html'
      TargetFolder: '$(Build.StagingDirectory)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish MSI'
    inputs:
      PathtoPublish: '$(TargetFolder)'
      timeoutInMinutes: 0
      condition: always()